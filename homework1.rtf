{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww16540\viewh12440\viewkind0
\deftab720
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
Add attachment(s), then choose the appropriate button at the bottom. \

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3460\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth2200\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\qc\partightenfactor0

\b \cf0 Title \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0

\b0 \cf0 Homework 1 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3460\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth2200\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\qc\partightenfactor0

\b \cf0 Due \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0

\b0 \cf0 Jan 17, 2016 11:55 pm \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3460\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth2200\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\qc\partightenfactor0

\b \cf0 Number of resubmissions allowed \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0

\b0 \cf0 Unlimited \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3460\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth2200\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\qc\partightenfactor0

\b \cf0 Accept Resubmission Until \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0

\b0 \cf0 Jan 18, 2016 9:00 am \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3460\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth2200\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\qc\partightenfactor0

\b \cf0 Status \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0

\b0 \cf0 In progress \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3460\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth2200\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\qc\partightenfactor0

\b \cf0 Grade Scale \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0

\b0 \cf0 Points (max 100.0) \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3460\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth2200\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\qc\partightenfactor0

\b \cf0 Modified by instructor \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0

\b0 \cf0 Jan 7, 2016 1:03 pm \cell \lastrow\row
\pard\pardeftab720\sl280\sa319\partightenfactor0

\b \cf0 Instructions \
\pard\pardeftab720\sl440\sa298\partightenfactor0

\fs36 \cf0 Assignment 1\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\b0\fs24 \cf0 This assignment introduces basic exercises in both Haskell and Prolog.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Install the {\field{\*\fldinst{HYPERLINK "http://www.haskell.org/ghc/"}}{\fldrslt \cf2 \ul \ulc2 Glasgow Haskell Compiler}} or the {\field{\*\fldinst{HYPERLINK "http://www.haskell.org/platform/"}}{\fldrslt \cf2 \ul \ulc2 Haskell Platform}} and create a new file called 
\f1 hw1.hs
\f0  which includes all your code.\uc0\u8232 Be sure to test your file with GHCi or by compiling it with ghc.\u8232 Now, write a function\u8232 
\f1 citeAuthor :: String -> String -> Stringc\uc0\u8232 
\f0 which puts first name and last name in reverse order:\uc0\u8232 
\f1 citeAuthor "Herman" "Melville" -- -> "Melville, Herman"\uc0\u8232 
\f0 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
Write a function\uc0\u8232 
\f1 initials :: String -> String -> String\uc0\u8232 
\f0 which returns the initials of the provided first name and last name:\uc0\u8232 
\f1 initials "Herman" "Melville" -- -> "H.M."\uc0\u8232 
\f0 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
Suppose that we represent books 
\f1 (author, title, year)
\f0  as tuples 
\f1 (String, String, Int)
\f0 .\uc0\u8232 Write a function\u8232 
\f1 title :: (String, String, Int) -> String\uc0\u8232 
\f0 which returns the title of a book.\uc0\u8232 
\f1 title ("Herman Melville", "Moby Dick", 1851) -- -> "Moby Dick"\uc0\u8232 
\f0\i Hint:
\i0  use pattern matching\uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
Write a function\uc0\u8232 
\f1 citeBook :: (String, String, Int) -> String\uc0\u8232 
\f0 which returns a citation in the format 
\f1 title (author, year)
\f0 \uc0\u8232 
\f1 citeBook ("Herman Melville", "Moby Dick", 1851) -- -> "Moby Dick (Herman Melville, 1851)"\uc0\u8232 
\f0 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
Write a function\uc0\u8232 
\f1 bibliography_rec :: [(String, String, Int)] -> String\uc0\u8232 
\f0 which returns a string containing all the books as citations in the form returned by 
\f1 citeBook
\f0  in part 4, separated by newlines. Use recursion to build up the result.\uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6.	}\expnd0\expndtw0\kerning0
Write a function\uc0\u8232 
\f1 averageYear :: [(String, String, Int)] -> Int\uc0\u8232 
\f0 which returns the average publication year of the provided books.\uc0\u8232 
\f1 averageYear [("","",1),("","",3)] -- -> 2\uc0\u8232 
\f0\i Hint:
\i0 \uc0\u8232 
\f1 div
\f0  performs integer division, 
\f1 sum
\f0  computes the sum of a list of numbers, and 
\f1 map
\f0  takes a function and a list and returns a list with all elements mapped by the function\uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	7.	}\expnd0\expndtw0\kerning0
Add the following definition to your source file:\uc0\u8232 
\f1 txt :: String\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	8.	}\expnd0\expndtw0\kerning0
txt = "[1] and [2] both feature characters who will do whatever it takes to " ++\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	9.	}\expnd0\expndtw0\kerning0
      "get to their goal, and in the end the thing they want the most ends " ++\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	10.	}\expnd0\expndtw0\kerning0
      "up destroying them.  In case of [2] this is a whale..."\uc0\u8232 
\f0 Write a function\uc0\u8232 
\f1 references :: String -> Int\uc0\u8232 
\f0 which takes a text with references in the format 
\f1 [n]
\f0  and returns the total number of references.\uc0\u8232 
\f1 references txt -- -> 3\uc0\u8232 
\f0 To make it simpler, you can assume that a reference will not be directly followed or preceded by punctuation or other words. Also, you can assume that your functions for question 9 and question 10 will only be called with text that has nothing but digits between the square brackets and no other parts of the text use square brackets.\uc0\u8232 
\i Hints:
\i0 \uc0\u8232 
\f1 words
\f0  splits a string into a list of words,\uc0\u8232 
\f1 filter
\f0  selects only certain elements in a list\uc0\u8232 
\f1 length
\f0  returns the length of a list\uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	11.	}\expnd0\expndtw0\kerning0
Write a function\uc0\u8232 
\f1 citeText :: [(String, String, Int)] -> String -> String\uc0\u8232 
\f0 which takes a list of books and a text with references in the form 
\f1 [n]
\f0  and returns a text with all references replaced by a citation of the n'th book using the 
\f1 citeBook
\f0  function from problem 4.\uc0\u8232 
\f1 let gatsby = ("F. Scott Fitzgerald", "Great Gatsby", 1925)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	12.	}\expnd0\expndtw0\kerning0
let moby = ("Herman Melville", "Moby Dick", 1851)\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	13.	}\expnd0\expndtw0\kerning0
citeText [gatsby, moby] txt\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	14.	}\expnd0\expndtw0\kerning0
-- "The Great Gatsby (F. Scott Fitzgerald, 1925) and Moby Dick (Herman Melville, 1851) both feature..."\uc0\u8232 
\f0 To make it simpler, you can assume that a reference will not be directly followed or preceded by punctuation or other words. Also, you can assume that your functions for question 9 and question 10 will only be called with text that has nothing but digits between the square brackets and no other parts of the text use square brackets.\uc0\u8232 
\i Hints:
\i0  
\f1 unwords
\f0  is the opposite of 
\f1 words
\f0 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	15.	}\expnd0\expndtw0\kerning0
Get the {\field{\*\fldinst{HYPERLINK "http://www.swi-prolog.org/"}}{\fldrslt \cf2 \ul \ulc2 SWI-Prolog compiler}} or go to the Linux lab which has it pre-installed.\uc0\u8232 Create a file 
\f2\b hw1.pl
\f0\b0  with the following facts:\uc0\u8232 
\f1 father(al, bud).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	16.	}\expnd0\expndtw0\kerning0
father(al, kelly).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	17.	}\expnd0\expndtw0\kerning0
mother(peggy, kelly).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	18.	}\expnd0\expndtw0\kerning0
mother(peggy, bud).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	19.	}\expnd0\expndtw0\kerning0
mother(martha, peggy).\uc0\u8232 
\f0 Then start Prolog with either 
\f1 pl
\f0  or 
\f1 swipl
\f0 , load the file and test that it works.\uc0\u8232 
\f1 $ pl\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	20.	}\expnd0\expndtw0\kerning0
?- [hw1].\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	21.	}\expnd0\expndtw0\kerning0
?- father(X,bud).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	22.	}\expnd0\expndtw0\kerning0
X = al.\uc0\u8232 
\f0 Now, in the file, write a predicate\uc0\u8232 
\f1 grandma(X,Y) :- ...\uc0\u8232 
\f0 such that\uc0\u8232 
\f1 ?- grandma(martha, kelly).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	23.	}\expnd0\expndtw0\kerning0
yes.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	24.	}\expnd0\expndtw0\kerning0
?- grandma(X, bud).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	25.	}\expnd0\expndtw0\kerning0
X = martha.\uc0\u8232 
\f0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	26.	}\expnd0\expndtw0\kerning0
Write a predicate\uc0\u8232 
\f1 descendants(X,Y) :- ...\uc0\u8232 
\f0 which is true if Y is a direct or indirect descendant of X.\uc0\u8232 
\f1 ?- descendants(X,bud).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	27.	}\expnd0\expndtw0\kerning0
X = peggy ;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	28.	}\expnd0\expndtw0\kerning0
X = al \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	29.	}\expnd0\expndtw0\kerning0
X = martha.\uc0\u8232 
\f0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	30.	}\expnd0\expndtw0\kerning0
Write a predicate\uc0\u8232 
\f1 siblings(X,Y) :- ...\uc0\u8232 
\f0 which is true if X and Y have a common parent but are not the same person.\uc0\u8232 
\f1 ?- siblings(bud,kelly).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	31.	}\expnd0\expndtw0\kerning0
yes.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	32.	}\expnd0\expndtw0\kerning0
?- siblings(kelly,kelly).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	33.	}\expnd0\expndtw0\kerning0
no.\uc0\u8232 
\f0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	34.	}\expnd0\expndtw0\kerning0
The following facts describe a non-deterministic finite automaton with four states q0,q1,q2 and q3 which accepts the regular language 
\f1 "ab|aa*"
\f0 \uc0\u8232 
\f1 %  ->(q0)  ---a-->  (q1)  ---b-->  (q2*)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	35.	}\expnd0\expndtw0\kerning0
%     |\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	36.	}\expnd0\expndtw0\kerning0
%     a\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	37.	}\expnd0\expndtw0\kerning0
%     |\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	38.	}\expnd0\expndtw0\kerning0
%     V  / --<-- \\\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	39.	}\expnd0\expndtw0\kerning0
%    (q3*)        a\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	40.	}\expnd0\expndtw0\kerning0
%        \\ -->-- /\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	41.	}\expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	42.	}\expnd0\expndtw0\kerning0
transition(q0,q1,a).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	43.	}\expnd0\expndtw0\kerning0
transition(q1,q2,b).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	44.	}\expnd0\expndtw0\kerning0
transition(q0,q3,a).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	45.	}\expnd0\expndtw0\kerning0
transition(q3,q3,a).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	46.	}\expnd0\expndtw0\kerning0
accepting(q2).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	47.	}\expnd0\expndtw0\kerning0
accepting(q3).\uc0\u8232 
\f0 Write a predicate\uc0\u8232 
\f1 accepts(State, InputList) :- ...\uc0\u8232 
\f0 that is true if a series of transitions starting in State and processing the symbols (a,b,c) in the InputList leads to an accepting state.\uc0\u8232 
\f1 ?- accepts(q0, [a,b]).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	48.	}\expnd0\expndtw0\kerning0
yes\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	49.	}\expnd0\expndtw0\kerning0
?- accepts(q1, [b]).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	50.	}\expnd0\expndtw0\kerning0
yes\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	51.	}\expnd0\expndtw0\kerning0
?- accepts(q0, [a,a,a]).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	52.	}\expnd0\expndtw0\kerning0
yes\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	53.	}\expnd0\expndtw0\kerning0
?- accepts(q0, [a,a,b]).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	54.	}\expnd0\expndtw0\kerning0
no\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	55.	}\expnd0\expndtw0\kerning0
?- accepts(q0, [a,X]).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	56.	}\expnd0\expndtw0\kerning0
X = b ;\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	57.	}\expnd0\expndtw0\kerning0
X = a.\uc0\u8232 
\f0 If you are not familiar with {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Deterministic_finite_automaton"}}{\fldrslt \cf2 \ul \ulc2 deterministic finite automata (DFA)}} and {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Nondeterministic_finite_automaton"}}{\fldrslt \cf2 \ul \ulc2 non-deterministic finite automaton (NFA)}} then please attend a lab section.\uc0\u8232 
\i Hint:
\i0  Also try out 
\f1 accepts(q0,X).
\f0 \uc0\u8232 \
\pard\pardeftab720\sl340\sa280\partightenfactor0

\b\fs28 \cf0 What to submit\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\b0\fs24 \cf0 You should submit a file called 
\f2\b hw1.hs
\f0\b0  which includes all your Haskell code and a file called 
\f2\b hw1.pl
\f0\b0  which includes your Prolog code.\uc0\u8232 Both files should start with a comment with your name, and the name of your pair programming partner.\u8232 Also, it is a good idea to use comments on any non-obvious parts, e.g. on any helper function you defined.\
}